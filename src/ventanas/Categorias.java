/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventanas;

import clases.Conexion;
import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mb
 */
public class Categorias extends javax.swing.JFrame {

    DefaultTableModel model = new DefaultTableModel();
    public boolean actualizar = false;
    /**
     * Creates new form Categorias
     */
    public Categorias() {
        initComponents();
        actualizarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_codigo = new javax.swing.JTextField();
        txt_nombre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_categorias = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton_guardar = new javax.swing.JButton();
        jButton_limpiar = new javax.swing.JButton();
        jButton_eliminar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel_WallpaperFooter1 = new javax.swing.JLabel();
        jLabel_Wallpaper4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("DETALLE DE CATEGORIA");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Nombre:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        txt_codigo.setEnabled(false);
        txt_codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_codigoActionPerformed(evt);
            }
        });
        getContentPane().add(txt_codigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 170, -1));

        txt_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nombreActionPerformed(evt);
            }
        });
        txt_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_nombreKeyReleased(evt);
            }
        });
        getContentPane().add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 170, -1));

        jTable_categorias.setBackground(new java.awt.Color(255, 255, 255));
        jTable_categorias.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable_categorias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable_categorias);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 120, 480, 190));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("LISTADO DE CATEGORIAS");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 70, -1, -1));

        jButton_guardar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton_guardar.setText("Guardar");
        jButton_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_guardarActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 170, -1));

        jButton_limpiar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton_limpiar.setText("Limpiar");
        jButton_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_limpiarActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_limpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 170, -1));

        jButton_eliminar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton_eliminar.setText("Eliminar");
        jButton_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_eliminarActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 170, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("CÃ³digo:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        jLabel_WallpaperFooter1.setBackground(new java.awt.Color(153, 153, 153));
        jLabel_WallpaperFooter1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel_WallpaperFooter1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_WallpaperFooter1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel_WallpaperFooter1.setText("     Historial de Entradas");
        jLabel_WallpaperFooter1.setOpaque(true);
        getContentPane().add(jLabel_WallpaperFooter1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 880, 60));

        jLabel_Wallpaper4.setBackground(new java.awt.Color(204, 204, 204));
        jLabel_Wallpaper4.setForeground(new java.awt.Color(153, 153, 153));
        jLabel_Wallpaper4.setOpaque(true);
        getContentPane().add(jLabel_Wallpaper4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 760, 350));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_codigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_codigoActionPerformed

    private void txt_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nombreActionPerformed

    private void txt_nombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nombreKeyReleased
        validaciones();
    }//GEN-LAST:event_txt_nombreKeyReleased

    private void jButton_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_guardarActionPerformed
      
        String codigo, nombre;

        codigo = txt_codigo.getText().trim();
        nombre = txt_nombre.getText().trim();

        if (validaciones() == 0) {
            if (actualizar == true) {
                try {
                    Connection cn = Conexion.conectar();
                    PreparedStatement pst2 = cn.prepareStatement(
                        "UPDATE categorias SET nombre=? WHERE id = '" + codigo + "'");

                    pst2.setString(1, nombre.toUpperCase().charAt(0) + txt_nombre.getText().substring(1, txt_nombre.getText().length()).toLowerCase().trim());
                    pst2.executeUpdate();
                    cn.close();

                    Limpiar();
                    actualizar = false;
                    Clear_Table();
                    blanquear();
                    JOptionPane.showMessageDialog(null, "Actualizacion exitosa!");

                } catch (SQLException e) {
                    System.err.println("Error en registrar categoria " + e);
                    JOptionPane.showMessageDialog(null, "Error al actualizar, contacte al administrador");
                }
            } else {
                try {
                    Connection cn = Conexion.conectar();
                    PreparedStatement pst2 = cn.prepareStatement(
                        "INSERT INTO `categorias`( `nombre`) VALUES (?)");

                    pst2.setString(1, nombre.toUpperCase().charAt(0) + txt_nombre.getText().substring(1, txt_nombre.getText().length()).toLowerCase().trim());
                    pst2.executeUpdate();
                    cn.close();

                    actualizar = false;
                    Limpiar();
                    Clear_Table();
                    blanquear();
                    JOptionPane.showMessageDialog(null, "Registro exitoso!");

                } catch (SQLException e) {
                    System.err.println("Error en registrar usuario " + e);
                    JOptionPane.showMessageDialog(null, "Error al registrar, contacte al administrador");
                }
            }

        } else {
            JOptionPane.showMessageDialog(null, "Debe llenar todos los campos");
        }
    }//GEN-LAST:event_jButton_guardarActionPerformed

    private void jButton_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_limpiarActionPerformed
        Limpiar();
    }//GEN-LAST:event_jButton_limpiarActionPerformed

    private void jButton_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_eliminarActionPerformed

        if (!txt_codigo.getText().trim().equals("")) {
            int confirmado = JOptionPane.showConfirmDialog(null, "Â¿Esta seguro?",
                "Borrar", JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.INFORMATION_MESSAGE);
            if (JOptionPane.OK_OPTION == confirmado) {
                try {
                    Connection cn2 = (Connection) Conexion.conectar();

                    PreparedStatement pst2 = cn2.prepareStatement(
                        "DELETE FROM categorias WHERE id = '" + txt_codigo.getText().trim() + "'");
                    pst2.executeUpdate();
                    cn2.close();
                    Clear_Table();
                    Limpiar();
                    blanquear();
                    actualizar = false;

                } catch (SQLException e) {
                    System.err.println("Error al borrar " + e);
                }
            }
        }
    }//GEN-LAST:event_jButton_eliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Categorias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Categorias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Categorias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Categorias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Categorias().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_eliminar;
    private javax.swing.JButton jButton_guardar;
    private javax.swing.JButton jButton_limpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel_Wallpaper4;
    private javax.swing.JLabel jLabel_WallpaperFooter1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_categorias;
    private javax.swing.JTextField txt_codigo;
    private javax.swing.JTextField txt_nombre;
    // End of variables declaration//GEN-END:variables
    
    public void Limpiar() {
        txt_codigo.setText("");
        txt_nombre.setText("");
        blanquear();
        actualizar = false;
    }

    public void obtenerDatosTabla() {
        jTable_categorias.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {

                int fila_point = jTable_categorias.rowAtPoint(e.getPoint());
                if (fila_point > -1) {
                    txt_codigo.setText(String.valueOf(model.getValueAt(fila_point, 0)));
                    txt_nombre.setText((String) model.getValueAt(fila_point, 1));   
                    actualizar = true;
                }
            }
        });
    }

    public void actualizarTabla() {

        try {
            System.out.println("entro");
            java.sql.Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "SELECT `id`, `nombre` FROM categorias");
            ResultSet rs = pst.executeQuery();

            model = (DefaultTableModel) jTable_categorias.getModel();
            jScrollPane1.setViewportView(jTable_categorias);
            System.out.println(jTable_categorias.getColumnCount());

            while (rs.next()) {
                Object[] fila = new Object[2];
                for (int i = 0; i < 2; i++) {
                    fila[i] = rs.getObject(i + 1);
                }                
                
                model.addRow(fila);
            }
            cn.close();
        } catch (SQLException e) {
            System.err.println("Error al llenar tabla." + e);
            JOptionPane.showMessageDialog(null, "Error al mostrar informacion, contacte al administrador");
        }
        obtenerDatosTabla();
    }

    private void Clear_Table() {
        int filas = jTable_categorias.getRowCount();
        for (int i = 0; filas > i; i++) {
            model.removeRow(0);
        }
        actualizarTabla();
    }

    public int validaciones() {
        int validacion = 0;
        if (txt_nombre.getText().equals("")) {
            txt_nombre.setBackground(Color.red);
            validacion++;
        } else {
            txt_nombre.setBackground(Color.white);
        }
        return validacion;
    }

    public void blanquear() {
        txt_nombre.setBackground(Color.white);
    }
}
