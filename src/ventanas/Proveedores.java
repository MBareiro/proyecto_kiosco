/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import clases.Conexion;
import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mb
 */
public class Proveedores extends javax.swing.JFrame {

    DefaultTableModel model;
    public static String id_usuario = "";
    public boolean actualizar = false;

    /**
     * Creates new form Proveedores
     */
    public Proveedores() {
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        actualizarTabla();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel_fondoTitulo = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_buscar = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_direccion = new javax.swing.JTextField();
        btn_guardar = new javax.swing.JButton();
        btn_limpiar = new javax.swing.JButton();
        btn_eliminar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_proveedores = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        txt_codigo = new javax.swing.JTextField();
        txt_telefono = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        btn_historial = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel_Wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_fondoTitulo.setBackground(new java.awt.Color(102, 102, 102));
        jLabel_fondoTitulo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel_fondoTitulo.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_fondoTitulo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel_fondoTitulo.setText("    Proveedores");
        jLabel_fondoTitulo.setOpaque(true);
        getContentPane().add(jLabel_fondoTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 70));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("LISTADO DE PROVEEDORES");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Buscar por nombre:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 80, 130, -1));

        txt_buscar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_buscarActionPerformed(evt);
            }
        });
        txt_buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_buscarKeyReleased(evt);
            }
        });
        getContentPane().add(txt_buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 80, 130, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Direccion:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, -1, -1));

        txt_direccion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_direccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_direccionActionPerformed(evt);
            }
        });
        getContentPane().add(txt_direccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 170, -1));

        btn_guardar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_guardar.setText("Guardar");
        btn_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarActionPerformed(evt);
            }
        });
        getContentPane().add(btn_guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, 170, -1));

        btn_limpiar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_limpiar.setText("Limpiar");
        btn_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_limpiarActionPerformed(evt);
            }
        });
        getContentPane().add(btn_limpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 170, -1));

        btn_eliminar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_eliminar.setText("Eliminar");
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btn_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 440, 170, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("DETALLE DE PROVEEDOR");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        jTable_proveedores.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable_proveedores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Telefono", "Direccion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable_proveedores);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 120, 540, 350));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Codigo:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        txt_codigo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_codigo.setEnabled(false);
        txt_codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_codigoActionPerformed(evt);
            }
        });
        getContentPane().add(txt_codigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 170, -1));

        txt_telefono.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_telefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_telefonoActionPerformed(evt);
            }
        });
        getContentPane().add(txt_telefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 170, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Telefono:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, -1));

        txt_nombre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nombreActionPerformed(evt);
            }
        });
        getContentPane().add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 170, -1));

        btn_historial.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_historial.setText("Ver Historial");
        btn_historial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_historialActionPerformed(evt);
            }
        });
        getContentPane().add(btn_historial, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, 170, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Nombre:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        jLabel_Wallpaper.setBackground(new java.awt.Color(204, 204, 204));
        jLabel_Wallpaper.setOpaque(true);
        getContentPane().add(jLabel_Wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 490));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_buscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_buscarActionPerformed

    private void txt_direccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_direccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_direccionActionPerformed

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed

        if (!txt_codigo.getText().trim().equals("")) {
            try {
                Connection cn2 = Conexion.conectar();

                PreparedStatement pst2 = cn2.prepareStatement(
                        "DELETE FROM proveedores WHERE id = '" + txt_codigo.getText().trim() + "'");
                pst2.executeUpdate();
                cn2.close();
                JOptionPane.showMessageDialog(null, "Borrado!");
                Clear_Table();
                Limpiar();
                actualizar = false;

            } catch (SQLException e) {
                System.err.println("Error al borrar " + e);
            }
        }
    }//GEN-LAST:event_btn_eliminarActionPerformed

    private void btn_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_limpiarActionPerformed
        Limpiar();
    }//GEN-LAST:event_btn_limpiarActionPerformed

    private void txt_codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_codigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_codigoActionPerformed

    private void txt_telefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_telefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_telefonoActionPerformed

    private void btn_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarActionPerformed

        String nombre, direccion, telefono, codigo;

        codigo = txt_codigo.getText().trim();
        nombre = txt_nombre.getText().trim();
        telefono = txt_telefono.getText().trim();
        direccion = txt_direccion.getText().trim();

        if (validaciones() == 0) {

            if (actualizar == true) {

                try {
                    Connection cn = Conexion.conectar();
                    PreparedStatement pst2 = cn.prepareStatement(
                            "UPDATE proveedores SET nombre=?, telefono=?, direccion=? WHERE id = '" + codigo + "'");
                    //pst2.setInt(1, 0);
                    pst2.setString(1, nombre.toUpperCase().charAt(0) + txt_nombre.getText().substring(1, txt_nombre.getText().length()).toLowerCase().trim());
                    pst2.setString(2, telefono);
                    pst2.setString(3, direccion.toUpperCase().charAt(0) + txt_direccion.getText().substring(1, txt_direccion.getText().length()).toLowerCase().trim());

                    pst2.executeUpdate();
                    cn.close();

                    Limpiar();
                    actualizar = false;
                    Clear_Table();
                    JOptionPane.showMessageDialog(null, "Actualizacion exitosa!");

                } catch (SQLException e) {
                    System.err.println("Error en registrar producto " + e);
                    JOptionPane.showMessageDialog(null, "Error al actualizar, contacte al administrador");
                }
            } else {
                try {
                    Connection cn = Conexion.conectar();
                    PreparedStatement pst2 = cn.prepareStatement(
                            "INSERT INTO `proveedores`( `nombre`, `telefono`, `direccion`) VALUES (?,?,?)");

                    pst2.setString(1, nombre.toUpperCase().charAt(0) + txt_nombre.getText().substring(1, txt_nombre.getText().length()).toLowerCase().trim());
                    pst2.setString(2, telefono);
                    pst2.setString(3, direccion.toUpperCase().charAt(0) + txt_direccion.getText().substring(1, txt_direccion.getText().length()).toLowerCase().trim());

                    pst2.executeUpdate();
                    cn.close();

                    actualizar = false;
                    Limpiar();
                    Clear_Table();
                    JOptionPane.showMessageDialog(null, "Registro exitoso!");

                } catch (SQLException e) {
                    System.err.println("Error en registrar usuario " + e);
                    JOptionPane.showMessageDialog(null, "Error al registrar, contacte al administrador");
                }
            }

        } else {
            JOptionPane.showMessageDialog(null, "Debe llenar todos los campos");
        }
    }//GEN-LAST:event_btn_guardarActionPerformed

    private void txt_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nombreActionPerformed

    private void txt_buscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_buscarKeyReleased
        buscarDatos(txt_buscar.getText());
    }//GEN-LAST:event_txt_buscarKeyReleased

    private void btn_historialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_historialActionPerformed
        if (jTable_proveedores.getSelectedRow() >= 0) {
            id_usuario = jTable_proveedores.getValueAt(jTable_proveedores.getSelectedRow(), 0).toString();
            Proveedores_Historial proveedores_Historial = new Proveedores_Historial();
            proveedores_Historial.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un proveedor.");
        }

    }//GEN-LAST:event_btn_historialActionPerformed

    public void actualizarTabla() {

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "SELECT `id`, `nombre`, `telefono`, `direccion` FROM proveedores");
            ResultSet rs = pst.executeQuery();

            
            model = (DefaultTableModel) jTable_proveedores.getModel();

            while (rs.next()) {
                Object[] fila = new Object[4];
                for (int i = 0; i < 4; i++) {
                    fila[i] = rs.getObject(i + 1);
                }
                model.addRow(fila);
            }
            cn.close();
        } catch (SQLException e) {
            System.err.println("Error al llenar tabla." + e);
            JOptionPane.showMessageDialog(null, "Error al mostrar informacion, contacte al administrador");
        }
        obtenerDatosTabla();
    }

    public int validaciones() {
        int validacion = 0;

        if (txt_telefono.getText().equals("")) {
            txt_telefono.setBackground(Color.red);
            validacion++;
        } else {
            txt_telefono.setBackground(Color.white);
        }
        if (txt_direccion.getText().equals("")) {
            txt_direccion.setBackground(Color.red);
            validacion++;
        } else {
            txt_direccion.setBackground(Color.white);
        }
        return validacion;
    }

    private void Clear_Table() {
        int filas = jTable_proveedores.getRowCount();
        for (int i = 0; filas > i; i++) {
            model.removeRow(0);
        }
        actualizarTabla();
    }

    public void obtenerDatosTabla() {
        jTable_proveedores.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {

                int fila_point = jTable_proveedores.rowAtPoint(e.getPoint());
                if (fila_point > -1) {
                    txt_codigo.setText(String.valueOf(model.getValueAt(fila_point, 0)));
                    txt_nombre.setText((String) model.getValueAt(fila_point, 1));
                    txt_telefono.setText(String.valueOf(model.getValueAt(fila_point, 2)));
                    txt_direccion.setText(String.valueOf(model.getValueAt(fila_point, 3)));
                    actualizar = true;
                }
            }
        });
    }

    public void buscarDatos(String valor) {
        String[] titulos = {"Codigo", "Nombre", "Telefono", "Direccion"};
        String[] registros = new String[4];

        DefaultTableModel modelo = new DefaultTableModel(null, titulos);
        String SQL = "";

        SQL = "SELECT * FROM proveedores WHERE nombre like '%" + valor + "%'";

        try {
            Connection cn = Conexion.conectar();
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(SQL);

            while (rs.next()) {
                registros[0] = rs.getString("id");
                registros[1] = rs.getString("nombre");
                registros[2] = rs.getString("telefono");
                registros[3] = rs.getString("direccion");
                modelo.addRow(registros);
            }
            jTable_proveedores.setModel(modelo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al filtrar: " + e);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Proveedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Proveedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Proveedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Proveedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Proveedores().setVisible(true);
            }
        });
    }

    public void Limpiar() {
        txt_codigo.setText("");
        txt_nombre.setText("");
        txt_telefono.setText("");
        txt_direccion.setText("");
        actualizar = false;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JButton btn_guardar;
    private javax.swing.JButton btn_historial;
    private javax.swing.JButton btn_limpiar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_Wallpaper;
    private javax.swing.JLabel jLabel_fondoTitulo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_proveedores;
    private javax.swing.JTextField txt_buscar;
    private javax.swing.JTextField txt_codigo;
    private javax.swing.JTextField txt_direccion;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_telefono;
    // End of variables declaration//GEN-END:variables
}
